{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/memphis-green.png","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post.js","webpack:///./src/components/seo.js"],"names":["renderPost","_ref","i","node","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_post__WEBPACK_IMPORTED_MODULE_5__","key","data","IndexPage","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","postsQuery","render","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","allMarkdownRemark","edges","map","_public_static_d_2370745799_json__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","color","position","left","top","textTransform","textAlign","fontSize","gatsby_browser_entry","to","textDecoration","defaultProps","Layout","Fragment","href","rel","header","site","siteMetadata","paddingTop","_755544856","Post","frontmatter","dangerouslySetInnerHTML","__html","html","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-58a0d80e7c7b0551ae00.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Post from \"../components/post\"\n\nconst renderPost = ({ node }, i) => {\n  return <Post key={i} data={node} />;\n};\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={postsQuery}\n    render={(data) => {\n      return (\n        <Layout>\n          <SEO title=\"Home\" keywords={[`Phoebe Hong`]} />\n          {data.allMarkdownRemark.edges.map(renderPost)}\n        </Layout>\n      );\n    }}\n  />\n);\n\nexport default IndexPage;\n\nconst postsQuery = graphql`{\n  allMarkdownRemark {\n    edges {\n      node {\n        frontmatter {\n          title\n          date\n        }\n        html\n      }\n    }\n  }\n}`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/memphis-green-59632b69cb95ed6627e7733d390d8565.png\";","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport background from \"../images/memphis-green.png\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `url(${background})`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `7rem 0 4rem 0`,\n      }}\n    >\n      <span\n        style={{\n          background: `#f0a0a1`,\n          color: `white`,\n          padding: `0.5rem`,\n          position: `absolute`,\n          left: `30%`,\n          top: `10%`,\n          textTransform: `uppercase`,\n        }}\n      >\n        Hello, my name is\n      </span>\n      <h1 style={{ textAlign: `center`, fontSize: \"3rem\" }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            background: `white`,\n            textDecoration: `none`,\n            padding: `0 1rem`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <link href=\"https://fonts.googleapis.com/css?family=EB+Garamond:400,700|Roboto:400,700\" rel=\"stylesheet\" />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Post = ({ data }) => {\n  return (\n    <>\n      <h1>{data.frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: data.html }} />\n    </>\n  )\n};\n\nexport default Post;\n\nPost.propTypes = {\n  data: PropTypes.object,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}