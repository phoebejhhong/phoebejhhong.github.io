{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/memphis-green.png","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Post","_ref","data","react_default","a","createElement","Fragment","frontmatter","title","dangerouslySetInnerHTML","__html","html","propTypes","PropTypes","object","renderPost","i","node","post","key","postsQuery","IndexPage","gatsby_browser_entry","query","render","layout","seo","keywords","allMarkdownRemark","edges","map","_2370745799","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","position","left","top","textTransform","textAlign","fontSize","to","textDecoration","Layout","href","rel","header","paddingTop","_755544856"],"mappings":"gKAGMA,EAAO,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACd,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,UAAKH,EAAKK,YAAYC,OACtBL,EAAAC,EAAAC,cAAA,OAAKI,wBAAyB,CAAEC,OAAQR,EAAKS,UAKpCX,IAEfA,EAAKY,UAAY,CACfV,YAAMW,EAAUC,QCRlB,IAAMC,EAAa,SAAAd,EAAWe,GAAM,IAAdC,EAAchB,EAAdgB,KACpB,OAAOd,EAAAC,EAAAC,cAACa,EAAD,CAAMC,IAAKH,EAAGd,KAAMe,KAmBvBG,GAFSC,UAdG,kBAChBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,MAAOH,EACPI,OAAQ,SAACtB,GACP,OACEC,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KACEtB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAKlB,MAAM,OAAOmB,SAAU,kBAC3BzB,EAAK0B,kBAAkBC,MAAMC,IAAIf,KAN1Cb,KAAA6B,KAec,gDC3BhBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAtC,IAAA4B,EAAA,SAYMW,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAAjC,EAAAC,cAACsC,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAM5C,MACL8C,EAAgBF,EAAMvB,QAAUyB,EAAgBF,EAAMvB,OAAOrB,MAEtD4C,EAAMtB,QAAUsB,EAAMG,UAC5BH,EAAM5C,KAAO4C,EAAM5C,KAAKA,KAAO8C,EAAgBF,EAAMvB,OAAOrB,MAGvDmC,EAAAjC,EAAAC,cAAA,uCA4Bf8B,EAAYvB,UAAY,CACtBV,KAAMW,IAAUC,OAChBS,MAAOV,IAAUqC,OAAOC,WACxB3B,OAAQX,IAAUuC,KAClBH,SAAUpC,IAAUuC,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kLCMzCK,EAAmB,SAAAzD,GAAkB,IAAf0D,EAAe1D,EAAf0D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOnB,IAAMvC,cAAc2D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiB9C,UAAY,CAC3B+C,SAAU9C,IAAUuD,MAAM,CACxBL,SAAUlD,IAAUqC,OAAOC,aAC1BA,YAGUO,iCCrBfJ,EAAAC,QAAiBvB,EAAAqC,EAAuB,6JCYxC,SAASC,EAATrE,GAA2D,IAA5CsE,EAA4CtE,EAA5CsE,YAAaC,EAA+BvE,EAA/BuE,KAAMC,EAAyBxE,EAAzBwE,KAAM9C,EAAmB1B,EAAnB0B,SAAUnB,EAASP,EAATO,MACxCkE,EADiDC,EAAAzE,KACjDwE,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEO,EAAA1E,EAAAC,cAAC0E,EAAA3E,EAAD,CACE4E,eAAgB,CACdR,QAEFhE,MAAOA,EACPyE,cAAa,QAAUP,EAAKG,aAAarE,MACzCiE,KAAM,CACJ,CACES,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS3E,GAEX,CACE4E,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAST,EAAKG,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAS3E,GAEX,CACE0E,KAAI,sBACJC,QAASP,IAGVU,OACC3D,EAAS4D,OAAS,EACd,CACEL,KAAI,WACJC,QAASxD,EAAS6D,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACN9C,SAAU,GACV4C,YAAW,IAGbD,EAAI1D,UAAY,CACd2D,YAAa1D,IAAUqC,OACvBsB,KAAM3D,IAAUqC,OAChBuB,KAAM5D,IAAU6E,QAAQ7E,IAAUC,QAClCa,SAAUd,IAAU6E,QAAQ7E,IAAUqC,QACtC1C,MAAOK,IAAUqC,OAAOC,YAGXmB,kPC7FTqB,EAAS,SAAA1F,GAAA,IAAG2F,EAAH3F,EAAG2F,UAAH,OACbzF,EAAAC,EAAAC,cAAA,UACEwF,MAAO,CACLC,WAAU,OAASA,IAAT,IACVC,aAAY,YAGd5F,EAAAC,EAAAC,cAAA,OACEwF,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,kBAGT/F,EAAAC,EAAAC,cAAA,QACEwF,MAAO,CACLC,WAAU,UACVK,MAAK,QACLD,QAAO,SACPE,SAAQ,WACRC,KAAI,MACJC,IAAG,MACHC,cAAa,cARjB,qBAaApG,EAAAC,EAAAC,cAAA,MAAIwF,MAAO,CAAEW,UAAS,SAAYC,SAAU,SAC1CtG,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEoF,GAAG,IACHb,MAAO,CACLM,MAAK,QACLL,WAAU,QACVa,eAAc,OACdT,QAAO,WAGRN,OAOXD,EAAO/E,UAAY,CACjBgF,UAAW/E,IAAUqC,QAGvByC,EAAOF,aAAe,CACpBG,UAAS,IAGID,QC3CTiB,UAAS,SAAA3G,GAAA,IAAGgD,EAAHhD,EAAGgD,SAAH,OACb9C,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,MAAK,YASLC,OAAQ,SAAAtB,GAAI,OACVC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,QAAMwG,KAAK,6EAA6EC,IAAI,eAC1F3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAQnB,UAAW1F,EAAKwE,KAAKG,aAAarE,QAC1CL,EAAAC,EAAAC,cAAA,OACEwF,MAAO,CACLG,OAAM,SACNC,SAAU,IACVC,QAAO,wBACPc,WAAY,IAGd7G,EAAAC,EAAAC,cAAA,YAAO4C,MAtBf/C,KAAA+G,MA6BFL,EAAOhG,UAAY,CACjBqC,SAAUpC,IAAUI,KAAKkC,YAGZyD","file":"component---src-pages-index-js-a1f14e88061e56dda970.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Post = ({ data }) => {\n  return (\n    <>\n      <h1>{data.frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: data.html }} />\n    </>\n  )\n};\n\nexport default Post;\n\nPost.propTypes = {\n  data: PropTypes.object,\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Post from \"../components/post\"\n\nconst renderPost = ({ node }, i) => {\n  return <Post key={i} data={node} />;\n};\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={postsQuery}\n    render={(data) => {\n      return (\n        <Layout>\n          <SEO title=\"Home\" keywords={[`Phoebe Hong`]} />\n          {data.allMarkdownRemark.edges.map(renderPost)}\n        </Layout>\n      );\n    }}\n  />\n);\n\nexport default IndexPage;\n\nconst postsQuery = graphql`{\n  allMarkdownRemark {\n    edges {\n      node {\n        frontmatter {\n          title\n          date\n        }\n        html\n      }\n    }\n  }\n}`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/memphis-green-59632b69cb95ed6627e7733d390d8565.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport background from \"../images/memphis-green.png\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `url(${background})`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `7rem 0 4rem 0`,\n      }}\n    >\n      <span\n        style={{\n          background: `#f0a0a1`,\n          color: `white`,\n          padding: `0.5rem`,\n          position: `absolute`,\n          left: `30%`,\n          top: `10%`,\n          textTransform: `uppercase`,\n        }}\n      >\n        Hello, my name is\n      </span>\n      <h1 style={{ textAlign: `center`, fontSize: \"3rem\" }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            background: `white`,\n            textDecoration: `none`,\n            padding: `0 1rem`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <link href=\"https://fonts.googleapis.com/css?family=EB+Garamond:400,700|Roboto:400,700\" rel=\"stylesheet\" />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}