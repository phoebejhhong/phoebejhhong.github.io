{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/memphis-green.png","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","IndexPage","a","createElement","title","keywords","href","target","rel","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","p","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","func","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","position","left","top","textTransform","textAlign","fontSize","gatsby_link_default","to","textDecoration","Layout","gatsby_browser_entry_StaticQuery","Fragment","header","paddingTop","_755544856","node"],"mappings":"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","file":"component---src-pages-index-js-082511b5de43dbeb8c15.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`Phoebe Hong`]} />\n    <h1>Hey there,</h1>\n    <p>I code for web, mostly with React.</p>\n    <p>You can find me <a href=\"https://github.com/phoebejhhong\" target=\"_blank\" rel=\"noopener noreferrer\">@phoebejhhong</a> on github.</p>\n  </Layout>\n)\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/memphis-green-59632b69cb95ed6627e7733d390d8565.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport background from \"../images/memphis-green.png\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `url(${background})`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `7rem 0 4rem 0`,\n      }}\n    >\n      <span\n        style={{\n          background: `#f0a0a1`,\n          color: `white`,\n          padding: `0.5rem`,\n          position: `absolute`,\n          left: `30%`,\n          top: `10%`,\n          textTransform: `uppercase`,\n        }}\n      >\n        Hello, my name is\n      </span>\n      <h1 style={{ textAlign: `center`, fontSize: \"3rem\" }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `black`,\n            background: `white`,\n            textDecoration: `none`,\n            padding: `0 1rem`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <link href=\"https://fonts.googleapis.com/css?family=EB+Garamond:400,700|Roboto:400,700\" rel=\"stylesheet\" />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}